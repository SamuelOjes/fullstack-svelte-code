{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Svg.svelte",
    "../../LunchMenuAdmin.svelte",
    "../../LunchMenuAdminDetails.svelte"
  ],
  "sourcesContent": [
    "<svg version=\"1.1\" class=\"fa-icon {className}\"\n  class:fa-spin={spin} class:fa-pulse={pulse} class:fa-inverse={inverse}\n  class:fa-flip-horizontal=\"{flip === 'horizontal'}\" class:fa-flip-vertical=\"{flip === 'vertical'}\"\n  {x} {y} {width} {height}\n  aria-label={label}\n  role=\"{ label ? 'img' : 'presentation' }\"\n  viewBox={box} style={style}\n  >\n  <slot></slot>\n</svg>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n.fa-inverse {\n  color: #fff;\n}\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n\n<script>\n  let className;\n\n  export { className as class };\n\n  export let width;\n  export let height;\n  export let box;\n\n  export let spin = false;\n  export let inverse = false;\n  export let pulse = false;\n  export let flip = null;\n\n  // optionals\n  export let x = undefined;\n  export let y = undefined;\n  export let style = undefined;\n  export let label = undefined;\n</script>\n",
    "<script>\n  import { onMount } from 'svelte'\n  import { navigateTo } from 'svelte-router-spa'\n  import axios from '../../axios-global'\n  import Icon from 'svelte-awesome'\n  import { refresh, times } from 'svelte-awesome/icons'\n  import { user } from '../../stores.js'\n\n  let lunchWeekList = []\n  let loading = true\n  let showDeleteModal = false\n  let showCreateModal = false\n  let createWeekOfDate = null\n  let weekToDelete = {}\n\n  onMount(async () => {\n    try {\n      const response = await axios.get(`${{\"env\":{\"API_ROOT\":\"\"}}.env.API_ROOT}/api/lunch-week`)\n      lunchWeekList = response.data\n      loading = false\n    } catch (e) {\n      console.error(e)\n    }\n  })\n\n  const openCreateModal = () => {\n    showCreateModal = true\n  }\n\n  const createLunchWeek = async () => {\n    showCreateModal = false\n    let newLunchWeek = {\n      weekOf: createWeekOfDate,\n      isPublished: false,\n    }\n    try {\n      loading = true\n      const response = await axios.post(`${{\"env\":{\"API_ROOT\":\"\"}}.env.API_ROOT}/api/lunch-week`, newLunchWeek)\n      const lunchWeekId = response.data.lunchWeekId\n      newLunchWeek.lunchWeekId = lunchWeekId\n      lunchWeekList.push(newLunchWeek)\n      loading = false\n    } catch (e) {\n      loading = false\n      console.error(e)\n    }\n  }\n\n  const openLunchWeekDetails = lunchWeek => {\n    const route = `/admin/manage-menus/week-details/${lunchWeek.lunchWeekId}`\n    navigateTo(route)\n  }\n\n  const openDeleteModal = lunchWeek => {\n    weekToDelete = lunchWeek\n    showDeleteModal = true\n  }\n\n  const deleteLunchWeek = async lunchWeek => {\n    showDeleteModal = false\n    const lunchWeekId = lunchWeek.lunchWeekId\n    try {\n      loading = true\n      await axios.delete(`${{\"env\":{\"API_ROOT\":\"\"}}.env.API_ROOT}/api/lunch-week/${lunchWeekId}`)\n      const deletedIndex = lunchWeekList.findIndex(x => x.lunchWeekId === lunchWeekId)\n      lunchWeekList.splice(deletedIndex, 1)\n      loading = false\n    } catch (e) {\n      loading = false\n      console.error(e)\n    }\n  }\n</script>\n\n<style>\n  .clickable {\n    cursor: pointer;\n  }\n</style>\n\n<div>\n  <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n    <ul>\n      <li>\n        <a href=\"/\">Home</a>\n      </li>\n      <li>\n        <a href=\"/admin/manage-menus\">Lunch Menu Administration</a>\n      </li>\n      <li class=\"is-active\">\n        <a href=\"/#\">{$user.schoolName}</a>\n      </li>\n    </ul>\n  </nav>\n  {#if loading}\n    <div class=\"section\">\n      <Icon spin data=\"{refresh}\" scale=\"3\" />\n    </div>\n  {:else}\n    <button class=\"button is-text is-small mb-1\" on:click=\"{() => openCreateModal()}\">Add Lunch Week</button>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>Week Of</th>\n          <th>Published</th>\n          <th></th>\n        </tr>\n      </thead>\n      {#each lunchWeekList as lunchWeek}\n        <tr>\n          <td class=\"has-text-link clickable\" on:click=\"{() => openLunchWeekDetails(lunchWeek)}\">{lunchWeek.weekOf}</td>\n          <td>{lunchWeek.isPublished}</td>\n          <td class=\"has-text-grey-light clickable\" on:click=\"{() => openDeleteModal(lunchWeek)}\">\n            <Icon style=\"margin-top: 4px;\" data=\"{times}\" />\n          </td>\n        </tr>\n      {/each}\n    </table>\n  {/if}\n</div>\n\n<div class=\"{showDeleteModal ? 'modal is-active' : 'modal'}\">\n  <div class=\"modal-background\"></div>\n  <div class=\"modal-card\">\n    <header class=\"modal-card-head\">\n      <p class=\"modal-card-title\">Warning</p>\n      <button class=\"delete\" on:click=\"{() => (showDeleteModal = false)}\" aria-label=\"close\"></button>\n    </header>\n    <section class=\"modal-card-body\">Delete Week of {weekToDelete.weekOf}?</section>\n    <footer class=\"modal-card-foot\">\n      <button class=\"button is-success\" on:click=\"{deleteLunchWeek(weekToDelete)}\">Continue</button>\n      <button class=\"button\" on:click=\"{() => (showDeleteModal = false)}\">Cancel</button>\n    </footer>\n  </div>\n</div>\n\n<div class=\"{showCreateModal ? 'modal is-active' : 'modal'}\">\n  <div class=\"modal-background\"></div>\n  <div class=\"modal-card\">\n    <header class=\"modal-card-head\">\n      <p class=\"modal-card-title\">Create Lunch Week</p>\n      <button class=\"delete\" on:click=\"{() => (showCreateModal = false)}\" aria-label=\"close\"></button>\n    </header>\n    <section class=\"modal-card-body\">\n      <div class=\"field\">\n        <label class=\"label\">Week Of</label>\n        <div class=\"control\">\n          <input bind:value=\"{createWeekOfDate}\" type=\"date\" class=\"input\" placeholder=\"yyyy-mm-dd\" />\n        </div>\n      </div>\n    </section>\n    <footer class=\"modal-card-foot\">\n      <button class=\"button is-success\" on:click=\"{() => createLunchWeek()}\">Continue</button>\n      <button class=\"button\" on:click=\"{() => (showCreateModal = false)}\">Cancel</button>\n    </footer>\n  </div>\n</div>\n",
    "<script>\n  import { onMount } from 'svelte'\n  import axios from '../../axios-global'\n  import Icon from 'svelte-awesome'\n  import { refresh } from 'svelte-awesome/icons'\n  import { add, parseISO, format } from 'date-fns'\n  import { user } from '../../stores.js'\n\n  export let currentRoute\n  let routeLunchWeekId = currentRoute.namedParams.lunchWeekId\n  let lunchWeek = {}\n  let loading = true\n  let saving = false\n  let publishing = false\n\n  onMount(async () => {\n    try {\n      const response = await axios.get(`${{\"env\":{\"API_ROOT\":\"\"}}.env.API_ROOT}/api/lunch-week/${routeLunchWeekId}`)\n      lunchWeek = response.data\n      seedLunchDays()\n      loading = false\n    } catch (e) {\n      console.error(e)\n    }\n  })\n\n  const getPublicLink = () => {\n    const schoolPath = $user.schoolName.toLowerCase().replace(/ /g, '-')\n    return `${window.location.origin}/lunch-menu/${schoolPath}/${lunchWeek.weekOf}`\n  }\n\n  const seedLunchDays = () => {\n    const weekOfDate = parseISO(lunchWeek.weekOf)\n    for (let i = 0; i < 5; i++) {\n      const calculatedDay = add(weekOfDate, { days: i })\n      const formattedDay = format(calculatedDay, 'yyyy-MM-dd')\n\n      if (lunchWeek.lunchDays.some(x => x.day === formattedDay)) {\n        continue\n      }\n\n      const lunchDay = {\n        day: formattedDay,\n        lunchWeekId: lunchWeek.lunchWeekId,\n        menuDetails: null,\n      }\n\n      lunchWeek.lunchDays.splice(i, 0, lunchDay)\n    }\n  }\n\n  const save = async () => {\n    saving = true\n    for (let i = 0; i < lunchWeek.lunchDays.length; i++) {\n      const lunchDay = lunchWeek.lunchDays[i]\n      if (lunchDay.lunchDayId) {\n        await axios.put(`${{\"env\":{\"API_ROOT\":\"\"}}.env.API_ROOT}/api/lunch-week/${routeLunchWeekId}/lunch-day/${lunchDay.lunchDayId}`, lunchDay)\n      } else {\n        const response = await axios.post(`${{\"env\":{\"API_ROOT\":\"\"}}.env.API_ROOT}/api/lunch-week/${routeLunchWeekId}/lunch-day`, lunchDay)\n        lunchDay.lunchDayId = response.data.lunchDayId\n      }\n    }\n    saving = false\n  }\n\n  const togglePublish = async () => {\n    publishing = true\n    let tempLunchWeek = JSON.parse(JSON.stringify(lunchWeek))\n    tempLunchWeek.isPublished = !tempLunchWeek.isPublished\n    delete tempLunchWeek.lunchDays\n\n    await axios.put(`${{\"env\":{\"API_ROOT\":\"\"}}.env.API_ROOT}/api/lunch-week/${routeLunchWeekId}`, tempLunchWeek)\n    lunchWeek.isPublished = !lunchWeek.isPublished\n    publishing = false\n  }\n</script>\n\n<style>\n  #link-dropdown-menu {\n    min-width: 32rem;\n  }\n</style>\n\n<div>\n  <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n    <ul>\n      <li>\n        <a href=\"/\">Home</a>\n      </li>\n      <li>\n        <a href=\"/admin/manage-menus\">Lunch Menu Administration</a>\n      </li>\n      <li class=\"is-active\">\n        <a href=\"/#\">{$user.schoolName}</a>\n      </li>\n    </ul>\n  </nav>\n  {#if loading}\n    <div class=\"section\">\n      <Icon spin data=\"{refresh}\" scale=\"3\" />\n    </div>\n  {:else}\n    <section>\n      <div class=\"buttons\">\n        <button class=\"{saving ? 'button is-link is-small is-loading' : 'button is-link is-small'}\" on:click=\"{() => save()}\">Save</button>\n        <button class=\"{publishing ? 'button is-text is-small is-loading' : 'button is-text is-small'}\" on:click=\"{() => togglePublish()}\">{lunchWeek.isPublished ? 'Unpublish' : 'Publish'}</button>\n        <!-- Add the Bulma Dropdown here -->\n        <div class=\"dropdown is-hoverable\">\n          <div class=\"dropdown-trigger\">\n            <button class=\"button is-text is-small\">Link</button>\n          </div>\n          <div class=\"dropdown-menu\" id=\"link-dropdown-menu\">\n            <div class=\"dropdown-content\">\n              <div class=\"dropdown-item\">\n                <p>Public Lunch Menu Link</p>\n                <p class=\"mt-2\">\n                  <a href=\"{getPublicLink()}\" target=\"_blank\">{getPublicLink()}</a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- end of bulma dropdown -->\n      </div>\n    </section>\n    <section class=\"mt-2\">\n      <div class=\"columns\">\n        {#each lunchWeek.lunchDays as lunchDay}\n          <div class=\"column\">\n            <div class=\"field\">\n              <label class=\"label\">{format(parseISO(lunchDay.day), 'EEE MM/dd/yyyy')}</label>\n              <div class=\"control\">\n                <textarea bind:value=\"{lunchDay.menuDetails}\" class=\"textarea\" rows=\"10\"></textarea>\n              </div>\n            </div>\n          </div>\n        {/each}\n      </div>\n    </section>\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAYA,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,YAAY,CACrB,IAAI,CAAE,YAAY,AACpB,CAAC,AACD,mBAAmB,eAAC,CAAC,AACnB,SAAS,CAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,AACzB,CAAC,AACD,iBAAiB,eAAC,CAAC,AACjB,SAAS,CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,AACzB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,SAAS,CAAE,sBAAO,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,AAC1C,CAAC,AACD,WAAW,eAAC,CAAC,AACX,KAAK,CAAE,IAAI,AACb,CAAC,AACD,SAAS,eAAC,CAAC,AACT,SAAS,CAAE,sBAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,AACzC,CAAC,AACD,WAAW,sBAAQ,CAAC,AAClB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,OAAO,IAAI,CAAC,AACzB,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC;ACqCC,UAAU,eAAC,CAAC,AACV,MAAM,CAAE,OAAO,AACjB,CAAC;ACCD,mBAAmB,eAAC,CAAC,AACnB,SAAS,CAAE,KAAK,AAClB,CAAC"
}